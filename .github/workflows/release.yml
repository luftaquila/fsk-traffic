name: Release

on:
  push:
    tags:
      - v*

jobs:
  build-firmware:
    uses: ./.github/workflows/firmware.yml
  build-native:
    uses: ./.github/workflows/native.yml
  release:
    name: release
    runs-on: ubuntu-latest
    needs: [build-firmware, build-native]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - id: changes
        uses: simbo/changes-between-tags-action@v1
      - run: |
          zip -rj fsk-traffic-control-macos-arm64-${{ github.ref_name }}.app.zip build.fsk-traffic-control-macos-arm64/fsk-traffic-control.app
          zip -r firmware-${{ github.ref_name }}.zip controller sensor
          mv build.fsk-traffic-control-windows-x64/fsk-traffic-control.exe fsk-traffic-control-windows-x64-${{ github.ref_name }}.exe
          mv build.fsk-traffic-control-linux-x64/fsk-traffic-control*.AppImage fsk-traffic-control-linux-x64-${{ github.ref_name }}.AppImage
          mv native/src-tauri/fsk-entry.json fsk-entry.json
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: |
            firmware-*.zip
            fsk-traffic-control-windows-x64-*
            fsk-traffic-control-macos-arm64-*
            fsk-traffic-control-linux-x64-*
            fsk-entry.json
          commit: ${{ github.sha }}
          tag: ${{ github.ref_name }}
          body: |
            ## Note
            ### Firmwares
            Use [STM32CubeProgrammer](https://www.st.com/en/development-tools/stm32cubeprog.html) to upload the firmware to the device and set the device IDs.  

            All controllers and sensors must have their ID in the flash memeory. Ensure that the value `0xBADACAFE` is stored at the memory address 0x0803FF00 and device ID at 0x0803FF04.

            The device IDs assigned to the sensors are 1 ~ 200, and 201 ~ 254 are for the controllers. ID 0 and 255 should be avoided as these values are reserved for `ID_BROADCAST` and `ID_INVALID`.

            ### Desktop Application
            Before open the `fsk-traffic-control` executable, download `fsk-entry.json` and put it in the same directory with the executable.

            In MacOS, run the following command before open the installed `fsk-traffic-control` for the first time.\
            Unless, it will say `"fsk-traffic-control" is damaged and canâ€™t be opened.` since the packages are not signed.

            ```sh
            xattr -c /path/to/fsk-traffic-control.app
            chmod +x /path/to/fsk-traffic-control.app/Contents/MacOS/fsk-traffic-control
            ```

            ## Changelogs
            ${{ steps.changes.outputs.changes }}
