name: Release

on:
  push:
    tags:
      - v*

jobs:
  build-firmware:
    uses: ./.github/workflows/firmware.yml
  build-native:
    uses: ./.github/workflows/native.yml
  release:
    name: release
    runs-on: ubuntu-latest
    needs: [build-firmware, build-native]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - id: changes
        uses: simbo/changes-between-tags-action@v1
      - run: |
          zip -j firmware-controller-${{ github.ref_name }}.zip controller/firmware.*
          zip -j firmware-sensor-${{ github.ref_name }}.zip sensor/firmware.*
          mv build.fsk-traffic-control-windows-x64/fsk-traffic-control.exe fsk-traffic-control-windows-x64-${{ github.ref_name }}.exe
          mv build.fsk-traffic-control-macos-arm64/fsk-traffic-control fsk-traffic-control-macos-arm64-${{ github.ref_name }}
          mv build.fsk-traffic-control-linux-x64/fsk-traffic-control fsk-traffic-control-linux-x64-${{ github.ref_name }}
          mv native/fsk-entry.json fsk-entry.json
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: |
            firmware-*.zip
            fsk-traffic-control-windows-x64-*
            fsk-traffic-control-macos-arm64-*
            fsk-traffic-control-linux-x64-*
            fsk-entry.json
          commit: ${{ github.sha }}
          tag: ${{ github.ref_name }}
          body: |
            ## Note
            Use [STM32CubeProgrammer](https://www.st.com/en/development-tools/stm32cubeprog.html) to upload the firmware to the device.  

            Before open the `fsk-traffic-control` executable, download `fsk-entry.json` and put it in the same directory with the executable.

            In MacOS, run the following command before open the installed `fsk-traffic-control` for the first time.\
            Unless, it will say `"fsk-traffic-control" is damaged and canâ€™t be opened.` since the packages are not signed

            ```sh
            xattr -c /Applications/fsk-traffic-control.app
            ```

            ## Changelogs
            ${{ steps.changes.outputs.changes }}
